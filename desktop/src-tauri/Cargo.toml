[package]
name = "agies-desktop"
version = "1.0.0"
description = "Agies Password Manager - The world's most secure desktop password manager"
authors = ["Agies Security Team"]
license = "MIT"
repository = "https://github.com/agies-security/agies-desktop"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.4.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.4.0", features = [
    "api-all",
    "devtools",
    "dialog-all",
    "fs-all",
    "global-shortcut-all",
    "http-all",
    "notification-all",
    "os-all",
    "path-all",
    "process-all",
    "shell-all",
    "system-tray",
    "updater",
    "window-all"
] }
tokio = { version = "1.0", features = ["full"] }
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
ring = "0.16"
argon2 = "0.5"
aes-gcm = "0.10"
chacha20poly1305 = "0.10"
hkdf = "0.12"
sha2 = "0.10"
rand = "0.8"
base64 = "0.21"
zeroize = { version = "1.6", features = ["zeroize_derive"] }
secrecy = "0.8"
keyring = "2.0"
directories = "5.0"
log = "0.4"
env_logger = "0.10"
anyhow = "1.0"
thiserror = "1.0"
regex = "1.9"
url = "2.4"
futures = "0.3"
parking_lot = "0.12"
once_cell = "1.18"
crossbeam = "0.8"

# Biometric authentication (platform-specific)
[target.'cfg(target_os = "windows")'.dependencies]
winapi = { version = "0.3", features = ["wincrypt", "dpapi"] }

[target.'cfg(target_os = "macos")'.dependencies]
security-framework = "2.9"
core-foundation = "0.9"

[target.'cfg(target_os = "linux")'.dependencies]
polkit = "0.1"

# Development dependencies
[dev-dependencies]
tempfile = "3.7"
serial_test = "2.0"

[features]
# This feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]

# Security features
default = ["secure-defaults"]
secure-defaults = []
hardware-security = []
enterprise = ["hardware-security"]

[profile.release]
panic = "abort"
codegen-units = 1
lto = true
opt-level = "s"
strip = true

[profile.dev]
opt-level = 0
debug = true
split-debuginfo = "unpacked"

# Platform-specific optimizations
[profile.release-windows]
inherits = "release"
target-cpu = "native"

[profile.release-macos]
inherits = "release"
target-cpu = "native"

[profile.release-linux]
inherits = "release"
target-cpu = "native"
